% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SimulationDecorator.R
\name{SimulationDecorator}
\alias{SimulationDecorator}
\title{SimulationDecorator}
\description{
This class acts as a base decorator for a concrete implementation of the
\code{\link{SimulationService}} stored as a private field. It respects the
\code{\link{SimulationService}} interface and simply forwards method calls to
the set simulation instance. Additional behavior can be added to the
simulation instance by extending this base decorator and overriding the
methods of interest defined in the \code{\link{SimulationService}} interface.
}
\seealso{
\code{\link{SimulationService}} and \code{\link{ModelSimulation}}.
}
\section{Super class}{
\code{\link[powerly:SimulationService]{powerly::SimulationService}} -> \code{SimulationDecorator}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-SimulationDecorator-set_simulation}{\code{SimulationDecorator$set_simulation()}}
\item \href{#method-SimulationDecorator-configure}{\code{SimulationDecorator$configure()}}
\item \href{#method-SimulationDecorator-run}{\code{SimulationDecorator$run()}}
\item \href{#method-SimulationDecorator-clone}{\code{SimulationDecorator$clone()}}
}
}
\if{html}{\out{
<details open><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="powerly" data-topic="SimulationService" data-id="initialize"><a href='../../powerly/html/SimulationService.html#method-SimulationService-initialize'><code>powerly::SimulationService$initialize()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SimulationDecorator-set_simulation"></a>}}
\if{latex}{\out{\hypertarget{method-SimulationDecorator-set_simulation}{}}}
\subsection{Method \code{set_simulation()}}{
Set the simulation instance.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SimulationDecorator$set_simulation(simulation)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{simulation}}{An object of class \code{\link{SimulationService}}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
This method returns void.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SimulationDecorator-configure"></a>}}
\if{latex}{\out{\hypertarget{method-SimulationDecorator-configure}{}}}
\subsection{Method \code{configure()}}{
Configure the simulation arguments. This method class the
corresponding method on the simulation instance.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SimulationDecorator$configure(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Optional arguments for configuring the simulation.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
This method returns void.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SimulationDecorator-run"></a>}}
\if{latex}{\out{\hypertarget{method-SimulationDecorator-run}{}}}
\subsection{Method \code{run()}}{
Run the simulation. This method calls the corresponding method on the
simulation instance.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SimulationDecorator$run(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Optional arguments for running the simulation.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
This method returns a list of variable length, containing the results
of a single simulation run.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SimulationDecorator-clone"></a>}}
\if{latex}{\out{\hypertarget{method-SimulationDecorator-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SimulationDecorator$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
